# PMB-CAF: Simplified Progressive Multi-Scale BCAM - FIXED INDEXING
# All operations at P5 resolution (20x20) to avoid tensor size mismatches

nc: 3
depth_multiple: 1.00  # YOLOv5l
width_multiple: 1.00

anchors:
  - [10,13, 16,30, 33,23]   # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

backbone:
  [
    ######### Dual Streams (0-19) - STANDARD YOLO #############
    # RGB Stream: 0-9
    [-1, 1, Focus, [64, 3]],        # 0: (B, 64, 320, 320)
    [-1, 1, Conv, [128, 3, 2]],     # 1: (B, 128, 160, 160)
    [-1, 3, C3, [128]],             # 2: (B, 128, 160, 160)
    [-1, 1, Conv, [256, 3, 2]],     # 3: (B, 256, 80, 80)
    [-1, 9, C3, [256]],             # 4: (B, 256, 80, 80) <- RGB P3
    [-1, 1, Conv, [512, 3, 2]],     # 5: (B, 512, 40, 40)
    [-1, 9, C3, [512]],             # 6: (B, 512, 40, 40) <- RGB P4
    [-1, 1, Conv, [1024, 3, 2]],    # 7: (B, 1024, 20, 20)
    [-1, 1, SPP, [1024, [5, 9, 13]]], # 8: (B, 1024, 20, 20)
    [-1, 3, C3, [1024, False]],     # 9: (B, 1024, 20, 20) <- RGB P5

    # Thermal Stream: 10-19
    [-4, 1, Focus, [64, 3]],        # 10: (B, 64, 320, 320)
    [-1, 1, Conv, [128, 3, 2]],     # 11: (B, 128, 160, 160)
    [-1, 3, C3, [128]],             # 12: (B, 128, 160, 160)
    [-1, 1, Conv, [256, 3, 2]],     # 13: (B, 256, 80, 80)
    [-1, 9, C3, [256]],             # 14: (B, 256, 80, 80) <- Thermal P3
    [-1, 1, Conv, [512, 3, 2]],     # 15: (B, 512, 40, 40)
    [-1, 9, C3, [512]],             # 16: (B, 512, 40, 40) <- Thermal P4
    [-1, 1, Conv, [1024, 3, 2]],    # 17: (B, 1024, 20, 20)
    [-1, 1, SPP, [1024, [5, 9, 13]]], # 18: (B, 1024, 20, 20)
    [-1, 3, C3, [1024, False]],     # 19: (B, 1024, 20, 20) <- Thermal P5

    ######### SIMPLIFIED PROGRESSIVE FUSION #############
    
    # P5 BCAM: Establish semantic context
    [[9,19], 1, BCAM_SingleOutput, [1024]],         # 20: (B, 1024, 20, 20)
    
    # P4 Progressive: Downsample P4 to P5 resolution for processing
    [6, 1, nn.AdaptiveAvgPool2d, [20]],              # 21: (B, 512, 20, 20) <- RGB P4 → P5 res
    [16, 1, nn.AdaptiveAvgPool2d, [20]],             # 22: (B, 512, 20, 20) <- Thermal P4 → P5 res
    [20, 1, Conv, [512, 1, 1]],                     # 23: (B, 512, 20, 20) <- P5 context projected
    
    # P4 concatenation: f=[21, 22, 23] - all (B, 512, 20, 20)
    [[21, 22, 23], 1, Concat, [1]],                 # 24: (B, 1536, 20, 20)
    [-1, 1, Conv, [512, 1, 1]],                     # 25: (B, 512, 20, 20) <- P4 enhanced RGB
    [24, 1, Conv, [512, 1, 1]],                     # 26: (B, 512, 20, 20) <- P4 enhanced Thermal
    [[25, 26], 1, BCAM_SingleOutput, [512]],        # 27: (B, 512, 20, 20) <- P4 BCAM result
    
    # P3 Progressive: Downsample P3 to P5 resolution for processing
    [4, 1, nn.AdaptiveAvgPool2d, [20]],              # 28: (B, 256, 20, 20) <- RGB P3 → P5 res
    [14, 1, nn.AdaptiveAvgPool2d, [20]],             # 29: (B, 256, 20, 20) <- Thermal P3 → P5 res
    [27, 1, Conv, [256, 1, 1]],                     # 30: (B, 256, 20, 20) <- P4 context projected
    
    # P3 concatenation: f=[28, 29, 30] - all (B, 256, 20, 20)
    [[28, 29, 30], 1, Concat, [1]],                 # 31: (B, 768, 20, 20)
    [-1, 1, Conv, [256, 1, 1]],                     # 32: (B, 256, 20, 20) <- P3 enhanced RGB
    [31, 1, Conv, [256, 1, 1]],                     # 33: (B, 256, 20, 20) <- P3 enhanced Thermal
    [[32, 33], 1, BCAM_SingleOutput, [256]],        # 34: (B, 256, 20, 20) <- P3 BCAM result
  ]

head:
  [
    ######### Detection Head - Upsample to Detection Resolutions #############
    
    # P5 detection path: 20x20 → 20x20 (no change needed)
    [20, 1, Conv, [512, 1, 1]],                     # 35: (B, 512, 20, 20)
    
    # P4 detection path: 20x20 → 40x40
    [27, 1, Conv, [256, 1, 1]],                     # 36: (B, 256, 20, 20)
    [-1, 1, nn.Upsample, [None, 2, 'nearest']],     # 37: (B, 256, 40, 40)
    [35, 1, nn.Upsample, [None, 2, 'nearest']],     # 38: (B, 512, 40, 40)
    [[37, 38], 1, Concat, [1]],                     # 39: (B, 768, 40, 40)
    [-1, 3, C3, [512, False]],                      # 40: (B, 512, 40, 40) <- P4 detection
    
    # P3 detection path: 20x20 → 80x80
    [34, 1, Conv, [256, 1, 1]],                     # 41: (B, 256, 20, 20)
    [-1, 1, nn.Upsample, [None, 4, 'nearest']],     # 42: (B, 256, 80, 80)
    [40, 1, Conv, [256, 1, 1]],                     # 43: (B, 256, 40, 40)
    [-1, 1, nn.Upsample, [None, 2, 'nearest']],     # 44: (B, 256, 80, 80)
    [[42, 44], 1, Concat, [1]],                     # 45: (B, 512, 80, 80)
    [-1, 3, C3, [256, False]],                      # 46: (B, 256, 80, 80) <- P3 detection
    
    # Standard YOLO detection head
    [-1, 1, Conv, [256, 3, 2]],                     # 47: (B, 256, 40, 40) <- P3→P4
    [[47, 40], 1, Concat, [1]],                     # 48: (B, 768, 40, 40)
    [-1, 3, C3, [512, False]],                      # 49: (B, 512, 40, 40) <- P4 final
    
    [-1, 1, Conv, [512, 3, 2]],                     # 50: (B, 512, 20, 20) <- P4→P5
    [[50, 35], 1, Concat, [1]],                     # 51: (B, 1024, 20, 20)
    [-1, 3, C3, [1024, False]],                     # 52: (B, 1024, 20, 20) <- P5 final
    
    [[46, 49, 52], 1, Detect, [nc, anchors]],       # 53: Detection heads
  ]